old way of creating event 
      // app.post('/event', (req, res, _) => {

        //     User.findById(req.user._id)
        //         .then(user => {
        //             Event.create({
        //                 host: user._id,
        //                 date: req.body.date,
        //                 name: req.body.name,
        //                 category: req.body.category,
        //                 public: req.body.public,
        //                 venue: req.body.venue,
        //                 url: req.body.url,
        //                 address: req.body.address,
        //                 location: req.body.location

        //             }).then(event => {
        //                 user.events.push(event._id)
        //                 user.save()
        //                 res.json(event)
        //                 io.sockets.emit('reload')
        //             })
        //         })
        // })

        before  using mongodb attending.0.guest
                // newEvent.requested.push({ guest })
        // newEvent.attending.push({ guest })
        // await newEvent.save()


ideas  


        // .then(event => {
        //     const number = Number(event.requested[0].guest) - Number(guest)
        //     event.update({
        //         $set: { "requested.0.guest": number },
        //         $set: { "requested.0.user": user }
        //     })
        //     event.save()
        //     res.json(event)
        // })




            // Event.findByIdAndUpdate(id, {
        //     $inc: { "requested.0.guest": -guest },
        //     $set: { "requested.0.user": user }
        // }).then(event => res.json(event))




        // .then(event => res.json(event))
        // if (event.host.equals(user._id)) {
        //     res.json({ message: "you are the host" })
        // } else {
        //     // if (event.requested.some(attend => attend.user.equals(user))) {
        //     // res.json({ success: false, message: "you are already requested this event" })
        //     // } else {
        //     await event.update({
        //         "requested.0.guest ": guest
        //     })
        //     await event.save()
        //     res.json(event)
        // }
        // }